{"abi":[],"bytecode":{"object":"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200c90acfa5417f15bc3548757a47d5f6bb4dd144f8f924295abd7b0f1ea84ec2564736f6c63430008140033","sourceMap":"304:667:70:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;304:667:70;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200c90acfa5417f15bc3548757a47d5f6bb4dd144f8f924295abd7b0f1ea84ec2564736f6c63430008140033","sourceMap":"304:667:70:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This library defines complex data structures to represent artist profiles within the registry.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Artist Registry Types\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Provides structured data types used by the ArtistRegistry to manage and store artist information.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/registry/artist/types/ArtistRegistryTypes.sol\":\"ArtistRegistryTypes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"src/registry/artist/types/ArtistRegistryTypes.sol\":{\"keccak256\":\"0xb676d83e0209169718ab4fa2ea3a241f61b9f2f98f638576e2878c0a49ef9080\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13af736f39d2cc5e7b4addd115ef9ae6da1ca7a08bb61cd002d71d00f31d7612\",\"dweb:/ipfs/Qmesr88Gsh8tKneqfLQgf7sjL16PGJyR6eG2JdsboPwU1o\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/","openzeppelin/=lib/openzeppelin-contracts/contracts/","solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/registry/artist/types/ArtistRegistryTypes.sol":"ArtistRegistryTypes"},"evmVersion":"paris","libraries":{}},"sources":{"src/registry/artist/types/ArtistRegistryTypes.sol":{"keccak256":"0xb676d83e0209169718ab4fa2ea3a241f61b9f2f98f638576e2878c0a49ef9080","urls":["bzz-raw://13af736f39d2cc5e7b4addd115ef9ae6da1ca7a08bb61cd002d71d00f31d7612","dweb:/ipfs/Qmesr88Gsh8tKneqfLQgf7sjL16PGJyR6eG2JdsboPwU1o"],"license":"MIT"}},"version":1},"id":70}