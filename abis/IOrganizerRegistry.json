{"abi":[{"type":"function","name":"acceptNomination","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deregisterOrganizer","inputs":[{"name":"organizerId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getOrganizerInfoByAddress","inputs":[{"name":"organizerAddress","type":"address","internalType":"address"}],"outputs":[{"name":"name","type":"string","internalType":"string"},{"name":"bio","type":"string","internalType":"string"},{"name":"wallet","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"nominate","inputs":[{"name":"nominee","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateOrganizer","inputs":[{"name":"organizerId","type":"uint256","internalType":"uint256"},{"name":"name","type":"string","internalType":"string"},{"name":"bio","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"OrganizerAccepted","inputs":[{"name":"nominee","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"OrganizerDeregistered","inputs":[{"name":"organizerId","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"OrganizerNominated","inputs":[{"name":"nominee","type":"address","indexed":true,"internalType":"address"},{"name":"nominator","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"OrganizerRegistered","inputs":[{"name":"organizerId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"name","type":"string","indexed":false,"internalType":"string"},{"name":"wallet","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"OrganizerUpdated","inputs":[{"name":"organizerId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"name","type":"string","indexed":false,"internalType":"string"},{"name":"bio","type":"string","indexed":false,"internalType":"string"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"acceptNomination()":"d3468de7","deregisterOrganizer(uint256)":"fa9bbe36","getOrganizerInfoByAddress(address)":"df0388a0","nominate(address)":"b332180b","updateOrganizer(uint256,string,string)":"ff5f9c9d"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nominee\",\"type\":\"address\"}],\"name\":\"OrganizerAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"organizerId\",\"type\":\"uint256\"}],\"name\":\"OrganizerDeregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nominee\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nominator\",\"type\":\"address\"}],\"name\":\"OrganizerNominated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"organizerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"OrganizerRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"organizerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"bio\",\"type\":\"string\"}],\"name\":\"OrganizerUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptNomination\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"organizerId\",\"type\":\"uint256\"}],\"name\":\"deregisterOrganizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"organizerAddress\",\"type\":\"address\"}],\"name\":\"getOrganizerInfoByAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"bio\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nominee\",\"type\":\"address\"}],\"name\":\"nominate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"organizerId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"bio\",\"type\":\"string\"}],\"name\":\"updateOrganizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deregisterOrganizer(uint256)\":{\"params\":{\"organizerId\":\"The ID of the organizer being deregistered.\"}},\"getOrganizerInfoByAddress(address)\":{\"params\":{\"organizerAddress\":\"The wallet address of the organizer.\"},\"returns\":{\"bio\":\"The biography of the organizer.\",\"name\":\"The name of the organizer.\",\"wallet\":\"The wallet address of the organizer.\"}},\"nominate(address)\":{\"params\":{\"nominee\":\"The address being nominated for organizer status.\"}},\"updateOrganizer(uint256,string,string)\":{\"params\":{\"bio\":\"The updated biography of the organizer.\",\"name\":\"The updated name of the organizer.\",\"organizerId\":\"The ID of the organizer whose profile is being updated.\"}}},\"title\":\"IOrganizerRegistry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptNomination()\":{\"notice\":\"Accepts nomination for organizer status. Must be called by the nominee.\"},\"deregisterOrganizer(uint256)\":{\"notice\":\"Deregisters an organizer from the registry. Can only be called by the organizer themselves.\"},\"getOrganizerInfoByAddress(address)\":{\"notice\":\"Retrieves information about an organizer based on their wallet address.\"},\"nominate(address)\":{\"notice\":\"Nominates an address for organizer status, can only be called by an existing organizer.\"},\"updateOrganizer(uint256,string,string)\":{\"notice\":\"Updates an organizer's profile information.\"}},\"notice\":\"Interface for the OrganizerRegistry contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/registry/organizer/IOrganizerRegistry.sol\":\"IOrganizerRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"src/registry/organizer/IOrganizerRegistry.sol\":{\"keccak256\":\"0x305121148151ba5bf46e82783591f1132385803d7d776bd568687e9f7d8698de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b021144e71ef6fbb207121893144fc43d667c83f6dda679ea58198bb336edb44\",\"dweb:/ipfs/Qmev3tgW3oMhucvPERdgcVP2zxRt5LQGbJPfkUJ6FZexXD\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"nominee","type":"address","indexed":true}],"type":"event","name":"OrganizerAccepted","anonymous":false},{"inputs":[{"internalType":"uint256","name":"organizerId","type":"uint256","indexed":true}],"type":"event","name":"OrganizerDeregistered","anonymous":false},{"inputs":[{"internalType":"address","name":"nominee","type":"address","indexed":true},{"internalType":"address","name":"nominator","type":"address","indexed":true}],"type":"event","name":"OrganizerNominated","anonymous":false},{"inputs":[{"internalType":"uint256","name":"organizerId","type":"uint256","indexed":true},{"internalType":"string","name":"name","type":"string","indexed":false},{"internalType":"address","name":"wallet","type":"address","indexed":false}],"type":"event","name":"OrganizerRegistered","anonymous":false},{"inputs":[{"internalType":"uint256","name":"organizerId","type":"uint256","indexed":true},{"internalType":"string","name":"name","type":"string","indexed":false},{"internalType":"string","name":"bio","type":"string","indexed":false}],"type":"event","name":"OrganizerUpdated","anonymous":false},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"acceptNomination"},{"inputs":[{"internalType":"uint256","name":"organizerId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deregisterOrganizer"},{"inputs":[{"internalType":"address","name":"organizerAddress","type":"address"}],"stateMutability":"view","type":"function","name":"getOrganizerInfoByAddress","outputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"bio","type":"string"},{"internalType":"address","name":"wallet","type":"address"}]},{"inputs":[{"internalType":"address","name":"nominee","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"nominate"},{"inputs":[{"internalType":"uint256","name":"organizerId","type":"uint256"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"bio","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"updateOrganizer"}],"devdoc":{"kind":"dev","methods":{"deregisterOrganizer(uint256)":{"params":{"organizerId":"The ID of the organizer being deregistered."}},"getOrganizerInfoByAddress(address)":{"params":{"organizerAddress":"The wallet address of the organizer."},"returns":{"bio":"The biography of the organizer.","name":"The name of the organizer.","wallet":"The wallet address of the organizer."}},"nominate(address)":{"params":{"nominee":"The address being nominated for organizer status."}},"updateOrganizer(uint256,string,string)":{"params":{"bio":"The updated biography of the organizer.","name":"The updated name of the organizer.","organizerId":"The ID of the organizer whose profile is being updated."}}},"version":1},"userdoc":{"kind":"user","methods":{"acceptNomination()":{"notice":"Accepts nomination for organizer status. Must be called by the nominee."},"deregisterOrganizer(uint256)":{"notice":"Deregisters an organizer from the registry. Can only be called by the organizer themselves."},"getOrganizerInfoByAddress(address)":{"notice":"Retrieves information about an organizer based on their wallet address."},"nominate(address)":{"notice":"Nominates an address for organizer status, can only be called by an existing organizer."},"updateOrganizer(uint256,string,string)":{"notice":"Updates an organizer's profile information."}},"version":1}},"settings":{"remappings":["@openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/","openzeppelin/=lib/openzeppelin-contracts/contracts/","solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/registry/organizer/IOrganizerRegistry.sol":"IOrganizerRegistry"},"evmVersion":"paris","libraries":{}},"sources":{"src/registry/organizer/IOrganizerRegistry.sol":{"keccak256":"0x305121148151ba5bf46e82783591f1132385803d7d776bd568687e9f7d8698de","urls":["bzz-raw://b021144e71ef6fbb207121893144fc43d667c83f6dda679ea58198bb336edb44","dweb:/ipfs/Qmev3tgW3oMhucvPERdgcVP2zxRt5LQGbJPfkUJ6FZexXD"],"license":"MIT"}},"version":1},"id":55}