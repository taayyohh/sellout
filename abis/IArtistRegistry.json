{"abi":[{"type":"function","name":"acceptNomination","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deregisterArtist","inputs":[{"name":"_artistId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getArtistInfoByAddress","inputs":[{"name":"artistAddress","type":"address","internalType":"address"}],"outputs":[{"name":"name","type":"string","internalType":"string"},{"name":"bio","type":"string","internalType":"string"},{"name":"wallet","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"nominate","inputs":[{"name":"nominee","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateArtist","inputs":[{"name":"_artistId","type":"uint256","internalType":"uint256"},{"name":"_name","type":"string","internalType":"string"},{"name":"_bio","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"ArtistAccepted","inputs":[{"name":"artistId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"artistAddress","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"ArtistDeregistered","inputs":[{"name":"artistId","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ArtistNominated","inputs":[{"name":"nominee","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"ArtistRegistered","inputs":[{"name":"artistId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"name","type":"string","indexed":false,"internalType":"string"}],"anonymous":false},{"type":"event","name":"ArtistUpdated","inputs":[{"name":"artistId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"name","type":"string","indexed":false,"internalType":"string"},{"name":"bio","type":"string","indexed":false,"internalType":"string"}],"anonymous":false},{"type":"event","name":"ArtistWaitlisted","inputs":[{"name":"artist","type":"address","indexed":true,"internalType":"address"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"acceptNomination()":"d3468de7","deregisterArtist(uint256)":"65f91e6d","getArtistInfoByAddress(address)":"d2a35c8e","nominate(address)":"b332180b","updateArtist(uint256,string,string)":"48f90454"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"artistId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"artistAddress\",\"type\":\"address\"}],\"name\":\"ArtistAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"artistId\",\"type\":\"uint256\"}],\"name\":\"ArtistDeregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nominee\",\"type\":\"address\"}],\"name\":\"ArtistNominated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"artistId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"ArtistRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"artistId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"bio\",\"type\":\"string\"}],\"name\":\"ArtistUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"artist\",\"type\":\"address\"}],\"name\":\"ArtistWaitlisted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptNomination\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_artistId\",\"type\":\"uint256\"}],\"name\":\"deregisterArtist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"artistAddress\",\"type\":\"address\"}],\"name\":\"getArtistInfoByAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"bio\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nominee\",\"type\":\"address\"}],\"name\":\"nominate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_artistId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_bio\",\"type\":\"string\"}],\"name\":\"updateArtist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptNomination()\":{\"details\":\"Can only be called by the nominated artist themselves.\"},\"deregisterArtist(uint256)\":{\"params\":{\"_artistId\":\"The unique identifier of the artist.\"}},\"getArtistInfoByAddress(address)\":{\"params\":{\"artistAddress\":\"The wallet address of the artist.\"},\"returns\":{\"bio\":\"The biography of the artist.\",\"name\":\"The name of the artist.\",\"wallet\":\"The wallet address associated with the artist.\"}},\"nominate(address)\":{\"params\":{\"nominee\":\"The address of the artist being nominated.\"}},\"updateArtist(uint256,string,string)\":{\"params\":{\"_artistId\":\"The unique identifier of the artist.\",\"_bio\":\"The new biography for the artist.\",\"_name\":\"The new name for the artist.\"}}},\"title\":\"IArtistRegistry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptNomination()\":{\"notice\":\"Accepts the nomination for the artist, allowing them to complete their registration.\"},\"deregisterArtist(uint256)\":{\"notice\":\"Allows an artist to deregister themselves from the registry.\"},\"getArtistInfoByAddress(address)\":{\"notice\":\"Retrieves the information of an artist based on their wallet address.\"},\"nominate(address)\":{\"notice\":\"Nominates an artist for registration, can only be called by an artist with referral credits.\"},\"updateArtist(uint256,string,string)\":{\"notice\":\"Allows an artist to update their profile with a new name and biography.\"}},\"notice\":\"Interface for the ArtistRegistry contract, including nomination functionalities.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/registry/artist/IArtistRegistry.sol\":\"IArtistRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"src/registry/artist/IArtistRegistry.sol\":{\"keccak256\":\"0x2abb061a1b4d7b6380d539a06a4cb10a95156ac16f62340bcf960996642cd97b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ee2e8488d58b0dc78c35dade4200d7451f742d56e470ab371a3e4e084463fd3\",\"dweb:/ipfs/QmTNU94rj8H1KxVrexpKc6XiZPnhYBPLMeHdqCUxf1G88e\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"artistId","type":"uint256","indexed":true},{"internalType":"address","name":"artistAddress","type":"address","indexed":false}],"type":"event","name":"ArtistAccepted","anonymous":false},{"inputs":[{"internalType":"uint256","name":"artistId","type":"uint256","indexed":true}],"type":"event","name":"ArtistDeregistered","anonymous":false},{"inputs":[{"internalType":"address","name":"nominee","type":"address","indexed":true}],"type":"event","name":"ArtistNominated","anonymous":false},{"inputs":[{"internalType":"uint256","name":"artistId","type":"uint256","indexed":true},{"internalType":"string","name":"name","type":"string","indexed":false}],"type":"event","name":"ArtistRegistered","anonymous":false},{"inputs":[{"internalType":"uint256","name":"artistId","type":"uint256","indexed":true},{"internalType":"string","name":"name","type":"string","indexed":false},{"internalType":"string","name":"bio","type":"string","indexed":false}],"type":"event","name":"ArtistUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"artist","type":"address","indexed":true}],"type":"event","name":"ArtistWaitlisted","anonymous":false},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"acceptNomination"},{"inputs":[{"internalType":"uint256","name":"_artistId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deregisterArtist"},{"inputs":[{"internalType":"address","name":"artistAddress","type":"address"}],"stateMutability":"view","type":"function","name":"getArtistInfoByAddress","outputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"bio","type":"string"},{"internalType":"address","name":"wallet","type":"address"}]},{"inputs":[{"internalType":"address","name":"nominee","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"nominate"},{"inputs":[{"internalType":"uint256","name":"_artistId","type":"uint256"},{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_bio","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"updateArtist"}],"devdoc":{"kind":"dev","methods":{"acceptNomination()":{"details":"Can only be called by the nominated artist themselves."},"deregisterArtist(uint256)":{"params":{"_artistId":"The unique identifier of the artist."}},"getArtistInfoByAddress(address)":{"params":{"artistAddress":"The wallet address of the artist."},"returns":{"bio":"The biography of the artist.","name":"The name of the artist.","wallet":"The wallet address associated with the artist."}},"nominate(address)":{"params":{"nominee":"The address of the artist being nominated."}},"updateArtist(uint256,string,string)":{"params":{"_artistId":"The unique identifier of the artist.","_bio":"The new biography for the artist.","_name":"The new name for the artist."}}},"version":1},"userdoc":{"kind":"user","methods":{"acceptNomination()":{"notice":"Accepts the nomination for the artist, allowing them to complete their registration."},"deregisterArtist(uint256)":{"notice":"Allows an artist to deregister themselves from the registry."},"getArtistInfoByAddress(address)":{"notice":"Retrieves the information of an artist based on their wallet address."},"nominate(address)":{"notice":"Nominates an artist for registration, can only be called by an artist with referral credits."},"updateArtist(uint256,string,string)":{"notice":"Allows an artist to update their profile with a new name and biography."}},"version":1}},"settings":{"remappings":["@openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/","openzeppelin/=lib/openzeppelin-contracts/contracts/","solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/registry/artist/IArtistRegistry.sol":"IArtistRegistry"},"evmVersion":"paris","libraries":{}},"sources":{"src/registry/artist/IArtistRegistry.sol":{"keccak256":"0x2abb061a1b4d7b6380d539a06a4cb10a95156ac16f62340bcf960996642cd97b","urls":["bzz-raw://8ee2e8488d58b0dc78c35dade4200d7451f742d56e470ab371a3e4e084463fd3","dweb:/ipfs/QmTNU94rj8H1KxVrexpKc6XiZPnhYBPLMeHdqCUxf1G88e"],"license":"MIT"}},"version":1},"id":52}