{"abi":[{"type":"function","name":"burnTokens","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"owner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getTicketPricePaidAndTierIndex","inputs":[{"name":"showId","type":"bytes32","internalType":"bytes32"},{"name":"ticketId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"price","type":"uint256","internalType":"uint256"},{"name":"tierIndex","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"purchaseTickets","inputs":[{"name":"showId","type":"bytes32","internalType":"bytes32"},{"name":"tierIndex","type":"uint256","internalType":"uint256"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"paymentToken","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"setDefaultURI","inputs":[{"name":"newDefaultURI","type":"string","internalType":"string"},{"name":"showId","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setTokenURI","inputs":[{"name":"showId","type":"bytes32","internalType":"bytes32"},{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"newURI","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"TicketPurchased","inputs":[{"name":"buyer","type":"address","indexed":true,"internalType":"address"},{"name":"showId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"tierIndex","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"tokenId","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"paymentToken","type":"address","indexed":false,"internalType":"address"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"burnTokens(uint256,uint256,address)":"87f9ca5d","getTicketPricePaidAndTierIndex(bytes32,uint256)":"da3a7616","purchaseTickets(bytes32,uint256,uint256,address)":"1e87ccce","setDefaultURI(string,bytes32)":"5dbab132","setTokenURI(bytes32,uint256,string)":"a7d22597"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tierIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"}],\"name\":\"TicketPurchased\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burnTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"ticketId\",\"type\":\"uint256\"}],\"name\":\"getTicketPricePaidAndTierIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tierIndex\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"tierIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"}],\"name\":\"purchaseTickets\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newDefaultURI\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"}],\"name\":\"setDefaultURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"setTokenURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"TicketPurchased(address,bytes32,uint256,uint256,uint256,address)\":{\"params\":{\"amount\":\"Amount of tickets purchased\",\"buyer\":\"Address of the buyer\",\"paymentToken\":\"Address of the currency the ticket is priced in\",\"showId\":\"ID of the show for which tickets were purchased\",\"tierIndex\":\"Index of the ticket tier from which the tickets were purchased\",\"tokenId\":\"Unique ID of the purchased ticket\"}}},\"kind\":\"dev\",\"methods\":{\"burnTokens(uint256,uint256,address)\":{\"params\":{\"amount\":\"Amount of tokens to be burned\",\"owner\":\"Owner of the tokens being burned\",\"tokenId\":\"ID of the token to be burned\"}},\"getTicketPricePaidAndTierIndex(bytes32,uint256)\":{\"params\":{\"showId\":\"The unique identifier of the show.\",\"ticketId\":\"The unique identifier of the ticket.\"},\"returns\":{\"price\":\"The price paid for the ticket.\",\"tierIndex\":\"The index of the ticket tier.\"}},\"purchaseTickets(bytes32,uint256,uint256,address)\":{\"params\":{\"amount\":\"Amount of tickets to purchase\",\"paymentToken\":\"Address of the currency the ticket is priced in\",\"showId\":\"ID of the show\",\"tierIndex\":\"Index of the ticket tier from which to purchase tickets\"}},\"setDefaultURI(string,bytes32)\":{\"params\":{\"newDefaultURI\":\"New default URI to be set\",\"showId\":\"ID of the show for which the default URI is set\"}},\"setTokenURI(bytes32,uint256,string)\":{\"params\":{\"newURI\":\"New URI to set for the token\",\"showId\":\"ID of the show for which to set the URI\",\"tokenId\":\"Token ID for which to set the URI\"}}},\"title\":\"ITicket\",\"version\":1},\"userdoc\":{\"events\":{\"TicketPurchased(address,bytes32,uint256,uint256,uint256,address)\":{\"notice\":\"Emitted when a ticket is purchased\"}},\"kind\":\"user\",\"methods\":{\"burnTokens(uint256,uint256,address)\":{\"notice\":\"Burns a specific amount of tokens, removing them from circulation\"},\"getTicketPricePaidAndTierIndex(bytes32,uint256)\":{\"notice\":\"Retrieves the price paid for a specific ticket and its tier index.\"},\"purchaseTickets(bytes32,uint256,uint256,address)\":{\"notice\":\"Purchase multiple tickets for a specific show from a specific tier\"},\"setDefaultURI(string,bytes32)\":{\"notice\":\"Sets the default URI for all tokens\"},\"setTokenURI(bytes32,uint256,string)\":{\"notice\":\"Sets the URI for a given token ID\"}},\"notice\":\"Interface for the Ticket contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ticket/ITicket.sol\":\"ITicket\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"src/ticket/ITicket.sol\":{\"keccak256\":\"0xade784689c5fde089516f0094eb029a757865d827772779af96680412400be39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://085dacb9046f13569bb7f3a4f8065508c3d2767f00ec1228b720d75a6c43a9a1\",\"dweb:/ipfs/QmZCyVZM4U3ZXimyE3frmc5ZQrjLxYEXdFmqd6rgWiFnBF\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"buyer","type":"address","indexed":true},{"internalType":"bytes32","name":"showId","type":"bytes32","indexed":true},{"internalType":"uint256","name":"tierIndex","type":"uint256","indexed":false},{"internalType":"uint256","name":"tokenId","type":"uint256","indexed":false},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false},{"internalType":"address","name":"paymentToken","type":"address","indexed":false}],"type":"event","name":"TicketPurchased","anonymous":false},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"burnTokens"},{"inputs":[{"internalType":"bytes32","name":"showId","type":"bytes32"},{"internalType":"uint256","name":"ticketId","type":"uint256"}],"stateMutability":"view","type":"function","name":"getTicketPricePaidAndTierIndex","outputs":[{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"tierIndex","type":"uint256"}]},{"inputs":[{"internalType":"bytes32","name":"showId","type":"bytes32"},{"internalType":"uint256","name":"tierIndex","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"paymentToken","type":"address"}],"stateMutability":"payable","type":"function","name":"purchaseTickets"},{"inputs":[{"internalType":"string","name":"newDefaultURI","type":"string"},{"internalType":"bytes32","name":"showId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"setDefaultURI"},{"inputs":[{"internalType":"bytes32","name":"showId","type":"bytes32"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"newURI","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"setTokenURI"}],"devdoc":{"kind":"dev","methods":{"burnTokens(uint256,uint256,address)":{"params":{"amount":"Amount of tokens to be burned","owner":"Owner of the tokens being burned","tokenId":"ID of the token to be burned"}},"getTicketPricePaidAndTierIndex(bytes32,uint256)":{"params":{"showId":"The unique identifier of the show.","ticketId":"The unique identifier of the ticket."},"returns":{"price":"The price paid for the ticket.","tierIndex":"The index of the ticket tier."}},"purchaseTickets(bytes32,uint256,uint256,address)":{"params":{"amount":"Amount of tickets to purchase","paymentToken":"Address of the currency the ticket is priced in","showId":"ID of the show","tierIndex":"Index of the ticket tier from which to purchase tickets"}},"setDefaultURI(string,bytes32)":{"params":{"newDefaultURI":"New default URI to be set","showId":"ID of the show for which the default URI is set"}},"setTokenURI(bytes32,uint256,string)":{"params":{"newURI":"New URI to set for the token","showId":"ID of the show for which to set the URI","tokenId":"Token ID for which to set the URI"}}},"version":1},"userdoc":{"kind":"user","methods":{"burnTokens(uint256,uint256,address)":{"notice":"Burns a specific amount of tokens, removing them from circulation"},"getTicketPricePaidAndTierIndex(bytes32,uint256)":{"notice":"Retrieves the price paid for a specific ticket and its tier index."},"purchaseTickets(bytes32,uint256,uint256,address)":{"notice":"Purchase multiple tickets for a specific show from a specific tier"},"setDefaultURI(string,bytes32)":{"notice":"Sets the default URI for all tokens"},"setTokenURI(bytes32,uint256,string)":{"notice":"Sets the URI for a given token ID"}},"version":1}},"settings":{"remappings":["@openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/","openzeppelin/=lib/openzeppelin-contracts/contracts/","solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/ticket/ITicket.sol":"ITicket"},"evmVersion":"paris","libraries":{}},"sources":{"src/ticket/ITicket.sol":{"keccak256":"0xade784689c5fde089516f0094eb029a757865d827772779af96680412400be39","urls":["bzz-raw://085dacb9046f13569bb7f3a4f8065508c3d2767f00ec1228b720d75a6c43a9a1","dweb:/ipfs/QmZCyVZM4U3ZXimyE3frmc5ZQrjLxYEXdFmqd6rgWiFnBF"],"license":"MIT"}},"version":1},"id":61}