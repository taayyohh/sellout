{"abi":[{"type":"function","name":"burnTokens","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"purchaseTickets","inputs":[{"name":"showId","type":"bytes32","internalType":"bytes32"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"setDefaultURI","inputs":[{"name":"newDefaultURI","type":"string","internalType":"string"},{"name":"showId","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setTokenURI","inputs":[{"name":"showId","type":"bytes32","internalType":"bytes32"},{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"newURI","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"TicketPurchased","inputs":[{"name":"buyer","type":"address","indexed":true,"internalType":"address"},{"name":"showId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"ticketId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"fanStatus","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"burnTokens(uint256,uint256)":"8e81c64d","purchaseTickets(bytes32,uint256)":"fa29a69b","setDefaultURI(string,bytes32)":"5dbab132","setTokenURI(bytes32,uint256,string)":"a7d22597"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"ticketId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fanStatus\",\"type\":\"uint256\"}],\"name\":\"TicketPurchased\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"purchaseTickets\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newDefaultURI\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"}],\"name\":\"setDefaultURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"setTokenURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"TicketPurchased(address,bytes32,uint256,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of tickets purchased\",\"buyer\":\"The address of the buyer\",\"fanStatus\":\"The fan status based on the percentage of tickets sold\",\"showId\":\"The ID of the show for which the ticket was purchased\",\"ticketId\":\"The ID of the purchased ticket\"}}},\"kind\":\"dev\",\"methods\":{\"burnTokens(uint256,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to be burned\",\"tokenId\":\"The ID of the token type to be burned\"}},\"purchaseTickets(bytes32,uint256)\":{\"params\":{\"amount\":\"The amount of tickets to purchase\",\"showId\":\"The ID of the show\"}},\"setDefaultURI(string,bytes32)\":{\"params\":{\"newDefaultURI\":\"The new default URI to be set\",\"showId\":\"The ID of the show for which the default URI is set\"}},\"setTokenURI(bytes32,uint256,string)\":{\"params\":{\"newURI\":\"The new URI to set\",\"showId\":\"The ID of the show for which to set the URI\",\"tokenId\":\"The token ID for which to set the URI\"}}},\"title\":\"ITicket\",\"version\":1},\"userdoc\":{\"events\":{\"TicketPurchased(address,bytes32,uint256,uint256,uint256)\":{\"notice\":\"Event emitted when a ticket is purchased\"}},\"kind\":\"user\",\"methods\":{\"burnTokens(uint256,uint256)\":{\"notice\":\"Burns a specific amount of tokens, removing them from circulation\"},\"purchaseTickets(bytes32,uint256)\":{\"notice\":\"Purchase multiple tickets for a specific show\"},\"setDefaultURI(string,bytes32)\":{\"notice\":\"Sets the default URI for all tokens\"},\"setTokenURI(bytes32,uint256,string)\":{\"notice\":\"Sets the URI for a given token ID\"}},\"notice\":\"The external Ticket interface for the ERC1155 standard\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ticket/ITicket.sol\":\"ITicket\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"src/ticket/ITicket.sol\":{\"keccak256\":\"0x5b2e19acc74b48feecb7e63eea083bb8e430f01d1b02b767b0e4c8507ac6f899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d691c166b07a67ba5f8acd9b7cdca5ae3d8aeb440c721a8e0e0ee5aa1744cb\",\"dweb:/ipfs/QmPowBEa7oAcPkLVGrjDes3N2zD3suzYa4SDCzqVAKT7VX\"]},\"src/ticket/storage/TicketStorage.sol\":{\"keccak256\":\"0xd26caa6c2a7c559279c28c735e6d3aa0024f0eb81d26a7ec063073896151adda\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f04cd459a4ac1e0b15652bc637b7b430df4f01214cbb55e2b659a6bf4301fe2\",\"dweb:/ipfs/QmYdk4sHJSDU1kZb2EMELZPd8k9wCsgkzNnkKMKmFwo6yz\"]},\"src/ticket/types/TicketTypes.sol\":{\"keccak256\":\"0xfb8fd7e131e143455bda807dfbb002de69fc592315d67d6d1260cca6bcff2870\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3257305fe5c0c05ae45c1249bec79cfefa210b82fd5942b668a63dd48f64a509\",\"dweb:/ipfs/QmQK9PJRmw34VDNoGuYosR4X61rHqShMmc9MY3F1P8r4So\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"buyer","type":"address","indexed":true},{"internalType":"bytes32","name":"showId","type":"bytes32","indexed":true},{"internalType":"uint256","name":"ticketId","type":"uint256","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false},{"internalType":"uint256","name":"fanStatus","type":"uint256","indexed":false}],"type":"event","name":"TicketPurchased","anonymous":false},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"burnTokens"},{"inputs":[{"internalType":"bytes32","name":"showId","type":"bytes32"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"payable","type":"function","name":"purchaseTickets"},{"inputs":[{"internalType":"string","name":"newDefaultURI","type":"string"},{"internalType":"bytes32","name":"showId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"setDefaultURI"},{"inputs":[{"internalType":"bytes32","name":"showId","type":"bytes32"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"newURI","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"setTokenURI"}],"devdoc":{"kind":"dev","methods":{"burnTokens(uint256,uint256)":{"params":{"amount":"The amount of tokens to be burned","tokenId":"The ID of the token type to be burned"}},"purchaseTickets(bytes32,uint256)":{"params":{"amount":"The amount of tickets to purchase","showId":"The ID of the show"}},"setDefaultURI(string,bytes32)":{"params":{"newDefaultURI":"The new default URI to be set","showId":"The ID of the show for which the default URI is set"}},"setTokenURI(bytes32,uint256,string)":{"params":{"newURI":"The new URI to set","showId":"The ID of the show for which to set the URI","tokenId":"The token ID for which to set the URI"}}},"version":1},"userdoc":{"kind":"user","methods":{"burnTokens(uint256,uint256)":{"notice":"Burns a specific amount of tokens, removing them from circulation"},"purchaseTickets(bytes32,uint256)":{"notice":"Purchase multiple tickets for a specific show"},"setDefaultURI(string,bytes32)":{"notice":"Sets the default URI for all tokens"},"setTokenURI(bytes32,uint256,string)":{"notice":"Sets the URI for a given token ID"}},"version":1}},"settings":{"remappings":["@openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/","openzeppelin/=lib/openzeppelin-contracts/contracts/","solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/ticket/ITicket.sol":"ITicket"},"evmVersion":"paris","libraries":{}},"sources":{"src/ticket/ITicket.sol":{"keccak256":"0x5b2e19acc74b48feecb7e63eea083bb8e430f01d1b02b767b0e4c8507ac6f899","urls":["bzz-raw://d7d691c166b07a67ba5f8acd9b7cdca5ae3d8aeb440c721a8e0e0ee5aa1744cb","dweb:/ipfs/QmPowBEa7oAcPkLVGrjDes3N2zD3suzYa4SDCzqVAKT7VX"],"license":"MIT"},"src/ticket/storage/TicketStorage.sol":{"keccak256":"0xd26caa6c2a7c559279c28c735e6d3aa0024f0eb81d26a7ec063073896151adda","urls":["bzz-raw://8f04cd459a4ac1e0b15652bc637b7b430df4f01214cbb55e2b659a6bf4301fe2","dweb:/ipfs/QmYdk4sHJSDU1kZb2EMELZPd8k9wCsgkzNnkKMKmFwo6yz"],"license":"MIT"},"src/ticket/types/TicketTypes.sol":{"keccak256":"0xfb8fd7e131e143455bda807dfbb002de69fc592315d67d6d1260cca6bcff2870","urls":["bzz-raw://3257305fe5c0c05ae45c1249bec79cfefa210b82fd5942b668a63dd48f64a509","dweb:/ipfs/QmQK9PJRmw34VDNoGuYosR4X61rHqShMmc9MY3F1P8r4So"],"license":"MIT"}},"version":1},"id":77}