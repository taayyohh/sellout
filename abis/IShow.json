{"abi":[{"type":"function","name":"addTokenIdToWallet","inputs":[{"name":"showId","type":"bytes32","internalType":"bytes32"},{"name":"wallet","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"cancelShow","inputs":[{"name":"showId","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"completeShow","inputs":[{"name":"showId","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"consumeTicketTier","inputs":[{"name":"showId","type":"bytes32","internalType":"bytes32"},{"name":"tierIndex","type":"uint256","internalType":"uint256"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"depositToVault","inputs":[{"name":"showId","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"depositToVaultERC20","inputs":[{"name":"showId","type":"bytes32","internalType":"bytes32"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"paymentToken","type":"address","internalType":"address"},{"name":"ticketRecipient","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getNumberOfVoters","inputs":[{"name":"showId","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getOrganizer","inputs":[{"name":"showId","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getPendingPayout","inputs":[{"name":"showId","type":"bytes32","internalType":"bytes32"},{"name":"user","type":"address","internalType":"address"}],"outputs":[{"name":"amountOwed","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getPendingRefund","inputs":[{"name":"showId","type":"bytes32","internalType":"bytes32"},{"name":"user","type":"address","internalType":"address"}],"outputs":[{"name":"amountOwed","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getSellOutThreshold","inputs":[{"name":"showId","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getShowById","inputs":[{"name":"showId","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"name","type":"string","internalType":"string"},{"name":"description","type":"string","internalType":"string"},{"name":"organizer","type":"address","internalType":"address"},{"name":"artists","type":"address[]","internalType":"address[]"},{"name":"venue","type":"tuple","internalType":"struct VenueTypes.Venue","components":[{"name":"name","type":"string","internalType":"string"},{"name":"coordinates","type":"tuple","internalType":"struct VenueTypes.Coordinates","components":[{"name":"lat","type":"int256","internalType":"int256"},{"name":"lon","type":"int256","internalType":"int256"}]},{"name":"totalCapacity","type":"uint256","internalType":"uint256"},{"name":"wallet","type":"address","internalType":"address"},{"name":"venueId","type":"bytes32","internalType":"bytes32"}]},{"name":"ticketTiers","type":"tuple[]","internalType":"struct ShowTypes.TicketTier[]","components":[{"name":"name","type":"string","internalType":"string"},{"name":"price","type":"uint256","internalType":"uint256"},{"name":"ticketsAvailable","type":"uint256","internalType":"uint256"}]},{"name":"sellOutThreshold","type":"uint256","internalType":"uint256"},{"name":"totalCapacity","type":"uint256","internalType":"uint256"},{"name":"status","type":"uint8","internalType":"enum ShowTypes.Status"},{"name":"isActive","type":"bool","internalType":"bool"},{"name":"currencyAddress","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getShowStatus","inputs":[{"name":"showId","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"uint8","internalType":"enum ShowTypes.Status"}],"stateMutability":"view"},{"type":"function","name":"getTicketPricePaid","inputs":[{"name":"showId","type":"bytes32","internalType":"bytes32"},{"name":"ticketId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getTicketTierInfo","inputs":[{"name":"showId","type":"bytes32","internalType":"bytes32"},{"name":"tierIndex","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"name","type":"string","internalType":"string"},{"name":"price","type":"uint256","internalType":"uint256"},{"name":"ticketsAvailable","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getTotalCapacity","inputs":[{"name":"showId","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getTotalTicketsSold","inputs":[{"name":"showId","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getWalletTokenIds","inputs":[{"name":"showId","type":"bytes32","internalType":"bytes32"},{"name":"wallet","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"hasTicket","inputs":[{"name":"wallet","type":"address","internalType":"address"},{"name":"showId","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"ownsTicket","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isArtist","inputs":[{"name":"user","type":"address","internalType":"address"},{"name":"showId","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isOrganizer","inputs":[{"name":"user","type":"address","internalType":"address"},{"name":"showId","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isTicketOwner","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"showId","type":"bytes32","internalType":"bytes32"},{"name":"ticketId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"payout","inputs":[{"name":"showId","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"proposeShow","inputs":[{"name":"proposal","type":"tuple","internalType":"struct ShowTypes.ShowProposal","components":[{"name":"name","type":"string","internalType":"string"},{"name":"description","type":"string","internalType":"string"},{"name":"artists","type":"address[]","internalType":"address[]"},{"name":"coordinates","type":"tuple","internalType":"struct VenueTypes.Coordinates","components":[{"name":"lat","type":"int256","internalType":"int256"},{"name":"lon","type":"int256","internalType":"int256"}]},{"name":"radius","type":"uint256","internalType":"uint256"},{"name":"sellOutThreshold","type":"uint8","internalType":"uint8"},{"name":"totalCapacity","type":"uint256","internalType":"uint256"},{"name":"ticketTiers","type":"tuple[]","internalType":"struct ShowTypes.TicketTier[]","components":[{"name":"name","type":"string","internalType":"string"},{"name":"price","type":"uint256","internalType":"uint256"},{"name":"ticketsAvailable","type":"uint256","internalType":"uint256"}]},{"name":"split","type":"uint256[]","internalType":"uint256[]"},{"name":"currencyAddress","type":"address","internalType":"address"}]}],"outputs":[{"name":"showId","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"refundTicket","inputs":[{"name":"showId","type":"bytes32","internalType":"bytes32"},{"name":"ticketId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setProtocolAddresses","inputs":[{"name":"_ticketContract","type":"address","internalType":"address"},{"name":"_venueContract","type":"address","internalType":"address"},{"name":"_referralContract","type":"address","internalType":"address"},{"name":"_artistRegistry","type":"address","internalType":"address"},{"name":"_organizerRegistry","type":"address","internalType":"address"},{"name":"_venueRegistry","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setTicketOwnership","inputs":[{"name":"showId","type":"bytes32","internalType":"bytes32"},{"name":"owner","type":"address","internalType":"address"},{"name":"ticketId","type":"uint256","internalType":"uint256"},{"name":"isOwned","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setTicketPricePaid","inputs":[{"name":"showId","type":"bytes32","internalType":"bytes32"},{"name":"ticketId","type":"uint256","internalType":"uint256"},{"name":"price","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setTotalTicketsSold","inputs":[{"name":"showId","type":"bytes32","internalType":"bytes32"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateShowVenue","inputs":[{"name":"showId","type":"bytes32","internalType":"bytes32"},{"name":"newVenue","type":"tuple","internalType":"struct VenueTypes.Venue","components":[{"name":"name","type":"string","internalType":"string"},{"name":"coordinates","type":"tuple","internalType":"struct VenueTypes.Coordinates","components":[{"name":"lat","type":"int256","internalType":"int256"},{"name":"lon","type":"int256","internalType":"int256"}]},{"name":"totalCapacity","type":"uint256","internalType":"uint256"},{"name":"wallet","type":"address","internalType":"address"},{"name":"venueId","type":"bytes32","internalType":"bytes32"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateStatus","inputs":[{"name":"showId","type":"bytes32","internalType":"bytes32"},{"name":"status","type":"uint8","internalType":"enum ShowTypes.Status"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateStatusIfSoldOut","inputs":[{"name":"showId","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"withdrawRefund","inputs":[{"name":"showId","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"ERC20Deposited","inputs":[{"name":"showId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"tokenAddress","type":"address","indexed":true,"internalType":"address"},{"name":"depositor","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ExpiryUpdated","inputs":[{"name":"showId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"expiry","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"RefundWithdrawn","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"showId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ShowExpired","inputs":[{"name":"showId","type":"bytes32","indexed":true,"internalType":"bytes32"}],"anonymous":false},{"type":"event","name":"ShowProposed","inputs":[{"name":"showId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"organizer","type":"address","indexed":true,"internalType":"address"},{"name":"name","type":"string","indexed":false,"internalType":"string"},{"name":"artists","type":"address[]","indexed":false,"internalType":"address[]"},{"name":"description","type":"string","indexed":false,"internalType":"string"},{"name":"sellOutThreshold","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"split","type":"uint256[]","indexed":false,"internalType":"uint256[]"},{"name":"totalCapacity","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"StatusUpdated","inputs":[{"name":"showId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"status","type":"uint8","indexed":false,"internalType":"enum ShowTypes.Status"}],"anonymous":false},{"type":"event","name":"TicketRefunded","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"showId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"refundAmount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"TicketTierConsumed","inputs":[{"name":"showId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"tierIndex","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"VenueUpdated","inputs":[{"name":"showId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"newVenue","type":"tuple","indexed":false,"internalType":"struct VenueTypes.Venue","components":[{"name":"name","type":"string","internalType":"string"},{"name":"coordinates","type":"tuple","internalType":"struct VenueTypes.Coordinates","components":[{"name":"lat","type":"int256","internalType":"int256"},{"name":"lon","type":"int256","internalType":"int256"}]},{"name":"totalCapacity","type":"uint256","internalType":"uint256"},{"name":"wallet","type":"address","internalType":"address"},{"name":"venueId","type":"bytes32","internalType":"bytes32"}]}],"anonymous":false},{"type":"event","name":"Withdrawal","inputs":[{"name":"showId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"recipient","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"paymentToken","type":"address","indexed":false,"internalType":"address"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"addTokenIdToWallet(bytes32,address,uint256)":"de44006f","cancelShow(bytes32)":"ef5023a5","completeShow(bytes32)":"129e086b","consumeTicketTier(bytes32,uint256,uint256)":"644b5e59","depositToVault(bytes32)":"85266635","depositToVaultERC20(bytes32,uint256,address,address)":"5412233f","getNumberOfVoters(bytes32)":"85ffa16c","getOrganizer(bytes32)":"977cb89e","getPendingPayout(bytes32,address)":"42894bcb","getPendingRefund(bytes32,address)":"6e9cacd0","getSellOutThreshold(bytes32)":"1a348e62","getShowById(bytes32)":"27b1bf52","getShowStatus(bytes32)":"46c2c8a7","getTicketPricePaid(bytes32,uint256)":"93d4e100","getTicketTierInfo(bytes32,uint256)":"7e3e3935","getTotalCapacity(bytes32)":"620ec1e4","getTotalTicketsSold(bytes32)":"61041870","getWalletTokenIds(bytes32,address)":"5b9a1e09","hasTicket(address,bytes32)":"5c37da69","isArtist(address,bytes32)":"02c9a8b5","isOrganizer(address,bytes32)":"4ed372da","isTicketOwner(address,bytes32,uint256)":"a03f4efe","payout(bytes32)":"cfefb3d5","proposeShow((string,string,address[],(int256,int256),uint256,uint8,uint256,(string,uint256,uint256)[],uint256[],address))":"3b9ce466","refundTicket(bytes32,uint256)":"3c60d2d6","setProtocolAddresses(address,address,address,address,address,address)":"f8121873","setTicketOwnership(bytes32,address,uint256,bool)":"c8f67e96","setTicketPricePaid(bytes32,uint256,uint256)":"bd47dc5c","setTotalTicketsSold(bytes32,uint256)":"787d76b8","updateShowVenue(bytes32,(string,(int256,int256),uint256,address,bytes32))":"c29e2de4","updateStatus(bytes32,uint8)":"054372ed","updateStatusIfSoldOut(bytes32)":"e6180546","withdrawRefund(bytes32)":"e9acfa7c"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC20Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"ExpiryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RefundWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"}],\"name\":\"ShowExpired\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"organizer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"artists\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sellOutThreshold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"split\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalCapacity\",\"type\":\"uint256\"}],\"name\":\"ShowProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"enum ShowTypes.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"StatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"refundAmount\",\"type\":\"uint256\"}],\"name\":\"TicketRefunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tierIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TicketTierConsumed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"lat\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lon\",\"type\":\"int256\"}],\"internalType\":\"struct VenueTypes.Coordinates\",\"name\":\"coordinates\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"totalCapacity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"venueId\",\"type\":\"bytes32\"}],\"indexed\":false,\"internalType\":\"struct VenueTypes.Venue\",\"name\":\"newVenue\",\"type\":\"tuple\"}],\"name\":\"VenueUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"addTokenIdToWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"}],\"name\":\"cancelShow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"}],\"name\":\"completeShow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"tierIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"consumeTicketTier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"}],\"name\":\"depositToVault\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ticketRecipient\",\"type\":\"address\"}],\"name\":\"depositToVaultERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"}],\"name\":\"getNumberOfVoters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"}],\"name\":\"getOrganizer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getPendingPayout\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOwed\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getPendingRefund\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOwed\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"}],\"name\":\"getSellOutThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"}],\"name\":\"getShowById\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"organizer\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"artists\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"lat\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lon\",\"type\":\"int256\"}],\"internalType\":\"struct VenueTypes.Coordinates\",\"name\":\"coordinates\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"totalCapacity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"venueId\",\"type\":\"bytes32\"}],\"internalType\":\"struct VenueTypes.Venue\",\"name\":\"venue\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticketsAvailable\",\"type\":\"uint256\"}],\"internalType\":\"struct ShowTypes.TicketTier[]\",\"name\":\"ticketTiers\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"sellOutThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalCapacity\",\"type\":\"uint256\"},{\"internalType\":\"enum ShowTypes.Status\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"currencyAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"}],\"name\":\"getShowStatus\",\"outputs\":[{\"internalType\":\"enum ShowTypes.Status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"ticketId\",\"type\":\"uint256\"}],\"name\":\"getTicketPricePaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"tierIndex\",\"type\":\"uint256\"}],\"name\":\"getTicketTierInfo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticketsAvailable\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"}],\"name\":\"getTotalCapacity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"}],\"name\":\"getTotalTicketsSold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"getWalletTokenIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"}],\"name\":\"hasTicket\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"ownsTicket\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"}],\"name\":\"isArtist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"}],\"name\":\"isOrganizer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"ticketId\",\"type\":\"uint256\"}],\"name\":\"isTicketOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"}],\"name\":\"payout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"artists\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"lat\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lon\",\"type\":\"int256\"}],\"internalType\":\"struct VenueTypes.Coordinates\",\"name\":\"coordinates\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"radius\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"sellOutThreshold\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalCapacity\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticketsAvailable\",\"type\":\"uint256\"}],\"internalType\":\"struct ShowTypes.TicketTier[]\",\"name\":\"ticketTiers\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"split\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"currencyAddress\",\"type\":\"address\"}],\"internalType\":\"struct ShowTypes.ShowProposal\",\"name\":\"proposal\",\"type\":\"tuple\"}],\"name\":\"proposeShow\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"ticketId\",\"type\":\"uint256\"}],\"name\":\"refundTicket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ticketContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_venueContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_referralContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_artistRegistry\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_organizerRegistry\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_venueRegistry\",\"type\":\"address\"}],\"name\":\"setProtocolAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"ticketId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isOwned\",\"type\":\"bool\"}],\"name\":\"setTicketOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"ticketId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"setTicketPricePaid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setTotalTicketsSold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"lat\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lon\",\"type\":\"int256\"}],\"internalType\":\"struct VenueTypes.Coordinates\",\"name\":\"coordinates\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"totalCapacity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"venueId\",\"type\":\"bytes32\"}],\"internalType\":\"struct VenueTypes.Venue\",\"name\":\"newVenue\",\"type\":\"tuple\"}],\"name\":\"updateShowVenue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"},{\"internalType\":\"enum ShowTypes.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"updateStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"}],\"name\":\"updateStatusIfSoldOut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"showId\",\"type\":\"bytes32\"}],\"name\":\"withdrawRefund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ERC20Deposited(bytes32,address,address,uint256)\":{\"params\":{\"amount\":\"The amount of ERC20 tokens deposited.\",\"depositor\":\"The address of the account making the deposit.\",\"showId\":\"The unique identifier of the show receiving the deposit.\",\"tokenAddress\":\"The address of the ERC20 token being deposited.\"}},\"ExpiryUpdated(bytes32,uint256)\":{\"params\":{\"expiry\":\"The new expiry time for the show in UNIX timestamp.\",\"showId\":\"The unique identifier of the show.\"}},\"RefundWithdrawn(address,bytes32,uint256)\":{\"params\":{\"amount\":\"The amount of the refund.\",\"showId\":\"The unique identifier of the show.\",\"user\":\"The address of the user withdrawing the refund.\"}},\"ShowExpired(bytes32)\":{\"params\":{\"showId\":\"The unique identifier of the show.\"}},\"ShowProposed(bytes32,address,string,address[],string,uint256,uint256[],uint256)\":{\"params\":{\"artists\":\"An array of addresses representing the artists involved in the show.\",\"description\":\"A description of the proposed show.\",\"name\":\"The name of the proposed show.\",\"organizer\":\"The address of the organizer proposing the show.\",\"sellOutThreshold\":\"The percentage threshold for considering the show sold out.\",\"showId\":\"The unique identifier of the proposed show.\",\"split\":\"An array representing the revenue split between the organizer, artists, and venue.\",\"totalCapacity\":\"The total ticket capacity for the show.\"}},\"StatusUpdated(bytes32,uint8)\":{\"params\":{\"showId\":\"The unique identifier of the show.\",\"status\":\"The new status of the show.\"}},\"TicketRefunded(address,bytes32,uint256)\":{\"params\":{\"refundAmount\":\"The amount refunded to the user.\",\"showId\":\"The unique identifier of the show for which the ticket was refunded.\",\"user\":\"The address of the user receiving the refund.\"}},\"TicketTierConsumed(bytes32,uint256,uint256)\":{\"params\":{\"amount\":\"Number of tickets consumed\",\"showId\":\"ID of the show\",\"tierIndex\":\"Index of the ticket tier\"}},\"VenueUpdated(bytes32,(string,(int256,int256),uint256,address,bytes32))\":{\"params\":{\"newVenue\":\"The new venue details of the show.\",\"showId\":\"The unique identifier of the show.\"}},\"Withdrawal(bytes32,address,uint256,address)\":{\"params\":{\"amount\":\"The amount of funds withdrawn.\",\"paymentToken\":\"erc20 the ticket was priced in.\",\"recipient\":\"The address of the recipient who received the funds.\",\"showId\":\"The unique identifier of the show.\"}}},\"kind\":\"dev\",\"methods\":{\"addTokenIdToWallet(bytes32,address,uint256)\":{\"params\":{\"showId\":\"The unique identifier of the show.\",\"tokenId\":\"The unique identifier of the ticket being added to the wallet.\",\"wallet\":\"The wallet address to which the ticket ID will be added.\"}},\"cancelShow(bytes32)\":{\"params\":{\"showId\":\"The unique identifier of the show to be cancelled.\"}},\"completeShow(bytes32)\":{\"params\":{\"showId\":\"The unique identifier of the show to be marked as completed.\"}},\"consumeTicketTier(bytes32,uint256,uint256)\":{\"details\":\"This function should only be callable by authorized contracts, such as the Ticket contract.\",\"params\":{\"amount\":\"The number of tickets to consume from the specified tier.\",\"showId\":\"The unique identifier of the show.\",\"tierIndex\":\"The index of the ticket tier from which tickets are to be consumed.\"}},\"depositToVault(bytes32)\":{\"params\":{\"showId\":\"The unique identifier of the show for which the funds are being deposited.\"}},\"depositToVaultERC20(bytes32,uint256,address,address)\":{\"details\":\"Requires approval for the contract to transfer tokens on behalf of the sender.\",\"params\":{\"amount\":\"Amount of ERC20 tokens to deposit.\",\"paymentToken\":\"Address of the ERC20 token to deposit.\",\"showId\":\"Unique identifier for the show.\",\"ticketRecipient\":\"Address of the ticket recipient.\"}},\"getNumberOfVoters(bytes32)\":{\"params\":{\"showId\":\"The unique identifier of the show.\"},\"returns\":{\"_0\":\"The total number of voters associated with the show.\"}},\"getOrganizer(bytes32)\":{\"params\":{\"showId\":\"The unique identifier of the show.\"},\"returns\":{\"_0\":\"The address of the show's organizer.\"}},\"getPendingPayout(bytes32,address)\":{\"params\":{\"showId\":\"The unique identifier of the show.\",\"user\":\"The address of the user.\"},\"returns\":{\"amountOwed\":\"The total refund amount owed to the specified user.\"}},\"getPendingRefund(bytes32,address)\":{\"params\":{\"showId\":\"The unique identifier of the show.\",\"user\":\"The address of the user.\"},\"returns\":{\"amountOwed\":\"The total refund amount owed to the specified user.\"}},\"getSellOutThreshold(bytes32)\":{\"params\":{\"showId\":\"The unique identifier of the show.\"},\"returns\":{\"_0\":\"The sell-out threshold percentage for the show.\"}},\"getShowById(bytes32)\":{\"params\":{\"showId\":\"The unique identifier of the show.\"},\"returns\":{\"artists\":\"An array of addresses representing the artists involved in the show.\",\"currencyAddress\":\"The address of the currency the show is Priced in\",\"description\":\"A description of the show.\",\"isActive\":\"A boolean indicating whether the show is active.\",\"name\":\"The name of the show.\",\"organizer\":\"The address of the show's organizer.\",\"sellOutThreshold\":\"The sell-out threshold for the show, expressed as a percentage.\",\"status\":\"The current status of the show.\",\"ticketTiers\":\"An array of ticket tiers, including pricing and availability for each tier.\",\"totalCapacity\":\"The total capacity of tickets for the show.\",\"venue\":\"Detailed venue information for the show.\"}},\"getShowStatus(bytes32)\":{\"params\":{\"showId\":\"The unique identifier of the show.\"},\"returns\":{\"_0\":\"The current status of the show.\"}},\"getTicketPricePaid(bytes32,uint256)\":{\"params\":{\"showId\":\"The unique identifier of the show.\",\"ticketId\":\"The unique identifier of the ticket.\"},\"returns\":{\"_0\":\"The price paid for the ticket.\"}},\"getTicketTierInfo(bytes32,uint256)\":{\"params\":{\"showId\":\"The unique identifier of the show.\",\"tierIndex\":\"The index of the ticket tier within the show.\"},\"returns\":{\"name\":\"The name of the ticket tier.\",\"price\":\"The price of tickets within this tier.\",\"ticketsAvailable\":\"The number of tickets available for sale in this tier.\"}},\"getTotalCapacity(bytes32)\":{\"params\":{\"showId\":\"The unique identifier of the show.\"},\"returns\":{\"_0\":\"The total capacity of tickets available for the show.\"}},\"getTotalTicketsSold(bytes32)\":{\"params\":{\"showId\":\"The unique identifier of the show.\"},\"returns\":{\"_0\":\"The total number of tickets sold.\"}},\"getWalletTokenIds(bytes32,address)\":{\"params\":{\"showId\":\"The unique identifier of the show.\",\"wallet\":\"The address of the wallet.\"},\"returns\":{\"_0\":\"An array of token IDs associated with the show for the specified wallet.\"}},\"hasTicket(address,bytes32)\":{\"params\":{\"showId\":\"The unique identifier of the show.\",\"wallet\":\"The address of the wallet to check.\"},\"returns\":{\"ownsTicket\":\"A boolean indicating whether the wallet owns at least one ticket for the show.\"}},\"isArtist(address,bytes32)\":{\"params\":{\"showId\":\"The unique identifier of the show.\",\"user\":\"The address of the user to check.\"},\"returns\":{\"_0\":\"A boolean indicating whether the user is an artist in the show.\"}},\"isOrganizer(address,bytes32)\":{\"params\":{\"showId\":\"The unique identifier of the show.\",\"user\":\"The address of the user to check.\"},\"returns\":{\"_0\":\"A boolean indicating whether the user is the organizer of the show.\"}},\"isTicketOwner(address,bytes32,uint256)\":{\"params\":{\"owner\":\"The address of the potential ticket owner.\",\"showId\":\"The unique identifier of the show.\",\"ticketId\":\"The unique identifier of the ticket.\"},\"returns\":{\"_0\":\"A boolean indicating whether the owner has the ticket for the show.\"}},\"payout(bytes32)\":{\"params\":{\"showId\":\"The unique identifier of the show for which the payout is being requested.\"}},\"proposeShow((string,string,address[],(int256,int256),uint256,uint8,uint256,(string,uint256,uint256)[],uint256[],address))\":{\"details\":\"This function initiates the creation of a show by validating the input parameters encapsulated in the proposal, then creates a new show based on these parameters. It is the entry point for organizers to propose new shows to the platform. The function requires that the caller is a registered organizer and that the artists included in the proposal are registered artists.\",\"params\":{\"proposal\":\"A `ShowProposal` struct containing all the necessary details for proposing a new show, including name, description, artist addresses, venue coordinates, radius, sell-out threshold, total capacity, ticket tiers, revenue split configuration, and the currency address for ticket sales.\"},\"returns\":{\"showId\":\"The unique identifier for the newly proposed show, generated based on the proposal details.\"}},\"refundTicket(bytes32,uint256)\":{\"params\":{\"showId\":\"The unique identifier of the show for which the refund is requested.\",\"ticketId\":\"The unique identifier of the ticket being refunded.\"}},\"setProtocolAddresses(address,address,address,address,address,address)\":{\"params\":{\"_artistRegistry\":\"The address of the ArtistRegistry contract.\",\"_organizerRegistry\":\"The address of the OrganizerRegistry contract.\",\"_referralContract\":\"The address of the ReferralModule contract.\",\"_ticketContract\":\"The address of the Ticket contract.\",\"_venueContract\":\"The address of the Venue contract.\",\"_venueRegistry\":\"The address of the VenueRegistry contract.\"}},\"setTicketOwnership(bytes32,address,uint256,bool)\":{\"details\":\"This function should only be callable by the Ticket contract or other authorized contracts.\",\"params\":{\"isOwned\":\"A boolean indicating the ownership status to be set.\",\"owner\":\"The address of the ticket owner.\",\"showId\":\"The unique identifier of the show.\",\"ticketId\":\"The unique identifier of the ticket.\"}},\"setTicketPricePaid(bytes32,uint256,uint256)\":{\"params\":{\"price\":\"The price paid for the ticket.\",\"showId\":\"The unique identifier of the show.\",\"ticketId\":\"The unique identifier of the ticket.\"}},\"setTotalTicketsSold(bytes32,uint256)\":{\"params\":{\"amount\":\"The amount to be added to the total tickets sold count.\",\"showId\":\"The unique identifier of the show.\"}},\"updateShowVenue(bytes32,(string,(int256,int256),uint256,address,bytes32))\":{\"params\":{\"newVenue\":\"The new venue details to be applied to the show.\",\"showId\":\"The unique identifier of the show.\"}},\"updateStatus(bytes32,uint8)\":{\"params\":{\"showId\":\"The unique identifier of the show.\",\"status\":\"The new status to be assigned to the show.\"}},\"updateStatusIfSoldOut(bytes32)\":{\"params\":{\"showId\":\"The unique identifier of the show to be evaluated.\"}},\"withdrawRefund(bytes32)\":{\"params\":{\"showId\":\"The unique identifier of the show for which the refund is being withdrawn.\"}}},\"title\":\"IShow Interface\",\"version\":1},\"userdoc\":{\"events\":{\"ERC20Deposited(bytes32,address,address,uint256)\":{\"notice\":\"Event emitted when ERC20 tokens are deposited into a show's vault.\"},\"ExpiryUpdated(bytes32,uint256)\":{\"notice\":\"Emitted when the expiry of a show is updated.\"},\"RefundWithdrawn(address,bytes32,uint256)\":{\"notice\":\"Emitted when a user successfully withdraws their refund for a ticket.\"},\"ShowExpired(bytes32)\":{\"notice\":\"Emitted when a show is marked as expired.\"},\"ShowProposed(bytes32,address,string,address[],string,uint256,uint256[],uint256)\":{\"notice\":\"Emitted upon the proposal of a new show.\"},\"StatusUpdated(bytes32,uint8)\":{\"notice\":\"Emitted when the status of a show is updated.\"},\"TicketRefunded(address,bytes32,uint256)\":{\"notice\":\"Emitted when a ticket is refunded.\"},\"TicketTierConsumed(bytes32,uint256,uint256)\":{\"notice\":\"Emitted when tickets from a specific tier are consumed\"},\"VenueUpdated(bytes32,(string,(int256,int256),uint256,address,bytes32))\":{\"notice\":\"Emitted when the venue details of a show are updated.\"},\"Withdrawal(bytes32,address,uint256,address)\":{\"notice\":\"Emitted upon a successful withdrawal from the show's funds.\"}},\"kind\":\"user\",\"methods\":{\"addTokenIdToWallet(bytes32,address,uint256)\":{\"notice\":\"Adds a token ID to a user's wallet for a specific show, signifying ticket ownership.\"},\"cancelShow(bytes32)\":{\"notice\":\"Cancels a show based on its unique identifier.\"},\"completeShow(bytes32)\":{\"notice\":\"Marks a show as completed, which may trigger fund distributions and other end-of-show processes.\"},\"consumeTicketTier(bytes32,uint256,uint256)\":{\"notice\":\"Consumes a specified number of tickets from a ticket tier for a given show.\"},\"depositToVault(bytes32)\":{\"notice\":\"Allows the deposit of funds into a show's vault, contributing towards the show's financial pool.\"},\"depositToVaultERC20(bytes32,uint256,address,address)\":{\"notice\":\"Deposits specified ERC20 tokens into the vault for a specific show.\"},\"getNumberOfVoters(bytes32)\":{\"notice\":\"Retrieves the number of voters for a specific show, including both artists and the organizer.\"},\"getOrganizer(bytes32)\":{\"notice\":\"Retrieves the organizer's address for a given show.\"},\"getPendingPayout(bytes32,address)\":{\"notice\":\"Retrieves the pending refund amount owed to a specific user for a given show.\"},\"getPendingRefund(bytes32,address)\":{\"notice\":\"Retrieves the pending refund amount owed to a specific user for a given show.\"},\"getSellOutThreshold(bytes32)\":{\"notice\":\"Retrieves the sell-out threshold for a specific show, expressed as a percentage.\"},\"getShowById(bytes32)\":{\"notice\":\"Retrieves detailed information about a show by its unique identifier.\"},\"getShowStatus(bytes32)\":{\"notice\":\"Retrieves the current status of a show based on its unique identifier.\"},\"getTicketPricePaid(bytes32,uint256)\":{\"notice\":\"Retrieves the price paid for a specific ticket of a show.\"},\"getTicketTierInfo(bytes32,uint256)\":{\"notice\":\"Retrieves information about a specific ticket tier within a show.\"},\"getTotalCapacity(bytes32)\":{\"notice\":\"Retrieves the total capacity for a specific show.\"},\"getTotalTicketsSold(bytes32)\":{\"notice\":\"Retrieves the total number of tickets sold for a specific show.\"},\"getWalletTokenIds(bytes32,address)\":{\"notice\":\"Retrieves the token IDs associated with a specific show for a given wallet.\"},\"hasTicket(address,bytes32)\":{\"notice\":\"Checks if a wallet owns at least one ticket for a specific show.\"},\"isArtist(address,bytes32)\":{\"notice\":\"Checks if the specified user is an artist in the given show.\"},\"isOrganizer(address,bytes32)\":{\"notice\":\"Checks if the specified user is the organizer of the given show.\"},\"isTicketOwner(address,bytes32,uint256)\":{\"notice\":\"Checks if the specified owner owns a ticket for the given show.\"},\"payout(bytes32)\":{\"notice\":\"Initiates a payout of funds from a show's vault to the specified showId.\"},\"proposeShow((string,string,address[],(int256,int256),uint256,uint8,uint256,(string,uint256,uint256)[],uint256[],address))\":{\"notice\":\"Proposes a new show with detailed configuration encapsulated within a `ShowProposal` struct.\"},\"refundTicket(bytes32,uint256)\":{\"notice\":\"Allows a ticket owner to request a refund for a specific ticket of a show, under certain conditions.\"},\"setProtocolAddresses(address,address,address,address,address,address)\":{\"notice\":\"Sets the protocol addresses for Ticket, Venue, Referral, Artist Registry, Organizer Registry, and Venue Registry contracts.\"},\"setTicketOwnership(bytes32,address,uint256,bool)\":{\"notice\":\"Sets the ownership status of a ticket for a specific show.\"},\"setTicketPricePaid(bytes32,uint256,uint256)\":{\"notice\":\"Sets the price paid for a specific ticket of a show.\"},\"setTotalTicketsSold(bytes32,uint256)\":{\"notice\":\"Sets the total number of tickets sold for a specific show.\"},\"updateShowVenue(bytes32,(string,(int256,int256),uint256,address,bytes32))\":{\"notice\":\"Updates the venue details for a specific show.\"},\"updateStatus(bytes32,uint8)\":{\"notice\":\"Updates the status of a show, potentially triggered by ticket sales reaching the sell-out threshold or other criteria.\"},\"updateStatusIfSoldOut(bytes32)\":{\"notice\":\"Checks and updates the status of a show to 'SoldOut' if ticket sales meet or exceed the sell-out threshold.\"},\"withdrawRefund(bytes32)\":{\"notice\":\"Allows a user to withdraw their refund for a previously refunded ticket.\"}},\"notice\":\"Interface for the Show contract detailing functionalities with events and external functions for show management.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/show/IShow.sol\":\"IShow\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"src/show/IShow.sol\":{\"keccak256\":\"0xf37d63c0a6b1a89840e4af79ab98cda8186388fd0be669dc7ce0c163c1ae4e7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce1c24c85ed2a0d2503f857b1646e6a5d579e4fdc927d73d93a15bfa652be3cf\",\"dweb:/ipfs/QmVU5o5B7w9ggLRrMTdziEg1KcVgjvuJ9LBntJj3711f3Y\"]},\"src/show/types/ShowTypes.sol\":{\"keccak256\":\"0x4700af48e513d5cc011b642a42fc5289856d876c1ec0d8c1c135717d7f73507f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02487cfa6e12b19feaaa5a549ede9f689647190f82f95af041246012503a6c34\",\"dweb:/ipfs/QmNnQXHvSjXDMDBvtkthwrzYrf2iDT2AAgGVdQqxV9oC4s\"]},\"src/venue/storage/VenueStorage.sol\":{\"keccak256\":\"0xfaf584b6c6b9b15c4b8e6238e14621a61e8b2f7cef6bc222798f84d77517fdfd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84581ae057deddcd8954f1538c8d79a13f70ac61c24e47dea55019bea8dedc\",\"dweb:/ipfs/QmS1646muq7h6BecKPEpCamMqu55VA5SqJsZWt4phnnFZA\"]},\"src/venue/types/VenueTypes.sol\":{\"keccak256\":\"0x1a380557ee50da7ae8198bddd3ba38a2d97087a62431ca0666a10a7775b039cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b4016b4232862737e1919e215585af1fd52dc414c9775ca5c3f372b2a8ac080\",\"dweb:/ipfs/Qmb9zzyB727RvRhK2eynCJqCjEoWTdJyKBsFnQ8ay9SKVR\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes32","name":"showId","type":"bytes32","indexed":true},{"internalType":"address","name":"tokenAddress","type":"address","indexed":true},{"internalType":"address","name":"depositor","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"ERC20Deposited","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"showId","type":"bytes32","indexed":true},{"internalType":"uint256","name":"expiry","type":"uint256","indexed":false}],"type":"event","name":"ExpiryUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"user","type":"address","indexed":true},{"internalType":"bytes32","name":"showId","type":"bytes32","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"RefundWithdrawn","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"showId","type":"bytes32","indexed":true}],"type":"event","name":"ShowExpired","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"showId","type":"bytes32","indexed":true},{"internalType":"address","name":"organizer","type":"address","indexed":true},{"internalType":"string","name":"name","type":"string","indexed":false},{"internalType":"address[]","name":"artists","type":"address[]","indexed":false},{"internalType":"string","name":"description","type":"string","indexed":false},{"internalType":"uint256","name":"sellOutThreshold","type":"uint256","indexed":false},{"internalType":"uint256[]","name":"split","type":"uint256[]","indexed":false},{"internalType":"uint256","name":"totalCapacity","type":"uint256","indexed":false}],"type":"event","name":"ShowProposed","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"showId","type":"bytes32","indexed":true},{"internalType":"enum ShowTypes.Status","name":"status","type":"uint8","indexed":false}],"type":"event","name":"StatusUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"user","type":"address","indexed":true},{"internalType":"bytes32","name":"showId","type":"bytes32","indexed":true},{"internalType":"uint256","name":"refundAmount","type":"uint256","indexed":false}],"type":"event","name":"TicketRefunded","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"showId","type":"bytes32","indexed":true},{"internalType":"uint256","name":"tierIndex","type":"uint256","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"TicketTierConsumed","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"showId","type":"bytes32","indexed":true},{"internalType":"struct VenueTypes.Venue","name":"newVenue","type":"tuple","components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"struct VenueTypes.Coordinates","name":"coordinates","type":"tuple","components":[{"internalType":"int256","name":"lat","type":"int256"},{"internalType":"int256","name":"lon","type":"int256"}]},{"internalType":"uint256","name":"totalCapacity","type":"uint256"},{"internalType":"address","name":"wallet","type":"address"},{"internalType":"bytes32","name":"venueId","type":"bytes32"}],"indexed":false}],"type":"event","name":"VenueUpdated","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"showId","type":"bytes32","indexed":true},{"internalType":"address","name":"recipient","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false},{"internalType":"address","name":"paymentToken","type":"address","indexed":false}],"type":"event","name":"Withdrawal","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"showId","type":"bytes32"},{"internalType":"address","name":"wallet","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"addTokenIdToWallet"},{"inputs":[{"internalType":"bytes32","name":"showId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"cancelShow"},{"inputs":[{"internalType":"bytes32","name":"showId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"completeShow"},{"inputs":[{"internalType":"bytes32","name":"showId","type":"bytes32"},{"internalType":"uint256","name":"tierIndex","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"consumeTicketTier"},{"inputs":[{"internalType":"bytes32","name":"showId","type":"bytes32"}],"stateMutability":"payable","type":"function","name":"depositToVault"},{"inputs":[{"internalType":"bytes32","name":"showId","type":"bytes32"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"paymentToken","type":"address"},{"internalType":"address","name":"ticketRecipient","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"depositToVaultERC20"},{"inputs":[{"internalType":"bytes32","name":"showId","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getNumberOfVoters","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"bytes32","name":"showId","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getOrganizer","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"showId","type":"bytes32"},{"internalType":"address","name":"user","type":"address"}],"stateMutability":"view","type":"function","name":"getPendingPayout","outputs":[{"internalType":"uint256","name":"amountOwed","type":"uint256"}]},{"inputs":[{"internalType":"bytes32","name":"showId","type":"bytes32"},{"internalType":"address","name":"user","type":"address"}],"stateMutability":"view","type":"function","name":"getPendingRefund","outputs":[{"internalType":"uint256","name":"amountOwed","type":"uint256"}]},{"inputs":[{"internalType":"bytes32","name":"showId","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getSellOutThreshold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"bytes32","name":"showId","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getShowById","outputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"address","name":"organizer","type":"address"},{"internalType":"address[]","name":"artists","type":"address[]"},{"internalType":"struct VenueTypes.Venue","name":"venue","type":"tuple","components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"struct VenueTypes.Coordinates","name":"coordinates","type":"tuple","components":[{"internalType":"int256","name":"lat","type":"int256"},{"internalType":"int256","name":"lon","type":"int256"}]},{"internalType":"uint256","name":"totalCapacity","type":"uint256"},{"internalType":"address","name":"wallet","type":"address"},{"internalType":"bytes32","name":"venueId","type":"bytes32"}]},{"internalType":"struct ShowTypes.TicketTier[]","name":"ticketTiers","type":"tuple[]","components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"ticketsAvailable","type":"uint256"}]},{"internalType":"uint256","name":"sellOutThreshold","type":"uint256"},{"internalType":"uint256","name":"totalCapacity","type":"uint256"},{"internalType":"enum ShowTypes.Status","name":"status","type":"uint8"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"address","name":"currencyAddress","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"showId","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getShowStatus","outputs":[{"internalType":"enum ShowTypes.Status","name":"","type":"uint8"}]},{"inputs":[{"internalType":"bytes32","name":"showId","type":"bytes32"},{"internalType":"uint256","name":"ticketId","type":"uint256"}],"stateMutability":"view","type":"function","name":"getTicketPricePaid","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"bytes32","name":"showId","type":"bytes32"},{"internalType":"uint256","name":"tierIndex","type":"uint256"}],"stateMutability":"view","type":"function","name":"getTicketTierInfo","outputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"ticketsAvailable","type":"uint256"}]},{"inputs":[{"internalType":"bytes32","name":"showId","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getTotalCapacity","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"bytes32","name":"showId","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getTotalTicketsSold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"bytes32","name":"showId","type":"bytes32"},{"internalType":"address","name":"wallet","type":"address"}],"stateMutability":"view","type":"function","name":"getWalletTokenIds","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"address","name":"wallet","type":"address"},{"internalType":"bytes32","name":"showId","type":"bytes32"}],"stateMutability":"view","type":"function","name":"hasTicket","outputs":[{"internalType":"bool","name":"ownsTicket","type":"bool"}]},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"bytes32","name":"showId","type":"bytes32"}],"stateMutability":"view","type":"function","name":"isArtist","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"bytes32","name":"showId","type":"bytes32"}],"stateMutability":"view","type":"function","name":"isOrganizer","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"bytes32","name":"showId","type":"bytes32"},{"internalType":"uint256","name":"ticketId","type":"uint256"}],"stateMutability":"view","type":"function","name":"isTicketOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"bytes32","name":"showId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"payout"},{"inputs":[{"internalType":"struct ShowTypes.ShowProposal","name":"proposal","type":"tuple","components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"address[]","name":"artists","type":"address[]"},{"internalType":"struct VenueTypes.Coordinates","name":"coordinates","type":"tuple","components":[{"internalType":"int256","name":"lat","type":"int256"},{"internalType":"int256","name":"lon","type":"int256"}]},{"internalType":"uint256","name":"radius","type":"uint256"},{"internalType":"uint8","name":"sellOutThreshold","type":"uint8"},{"internalType":"uint256","name":"totalCapacity","type":"uint256"},{"internalType":"struct ShowTypes.TicketTier[]","name":"ticketTiers","type":"tuple[]","components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"ticketsAvailable","type":"uint256"}]},{"internalType":"uint256[]","name":"split","type":"uint256[]"},{"internalType":"address","name":"currencyAddress","type":"address"}]}],"stateMutability":"nonpayable","type":"function","name":"proposeShow","outputs":[{"internalType":"bytes32","name":"showId","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32","name":"showId","type":"bytes32"},{"internalType":"uint256","name":"ticketId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"refundTicket"},{"inputs":[{"internalType":"address","name":"_ticketContract","type":"address"},{"internalType":"address","name":"_venueContract","type":"address"},{"internalType":"address","name":"_referralContract","type":"address"},{"internalType":"address","name":"_artistRegistry","type":"address"},{"internalType":"address","name":"_organizerRegistry","type":"address"},{"internalType":"address","name":"_venueRegistry","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setProtocolAddresses"},{"inputs":[{"internalType":"bytes32","name":"showId","type":"bytes32"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"ticketId","type":"uint256"},{"internalType":"bool","name":"isOwned","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"setTicketOwnership"},{"inputs":[{"internalType":"bytes32","name":"showId","type":"bytes32"},{"internalType":"uint256","name":"ticketId","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setTicketPricePaid"},{"inputs":[{"internalType":"bytes32","name":"showId","type":"bytes32"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setTotalTicketsSold"},{"inputs":[{"internalType":"bytes32","name":"showId","type":"bytes32"},{"internalType":"struct VenueTypes.Venue","name":"newVenue","type":"tuple","components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"struct VenueTypes.Coordinates","name":"coordinates","type":"tuple","components":[{"internalType":"int256","name":"lat","type":"int256"},{"internalType":"int256","name":"lon","type":"int256"}]},{"internalType":"uint256","name":"totalCapacity","type":"uint256"},{"internalType":"address","name":"wallet","type":"address"},{"internalType":"bytes32","name":"venueId","type":"bytes32"}]}],"stateMutability":"nonpayable","type":"function","name":"updateShowVenue"},{"inputs":[{"internalType":"bytes32","name":"showId","type":"bytes32"},{"internalType":"enum ShowTypes.Status","name":"status","type":"uint8"}],"stateMutability":"nonpayable","type":"function","name":"updateStatus"},{"inputs":[{"internalType":"bytes32","name":"showId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"updateStatusIfSoldOut"},{"inputs":[{"internalType":"bytes32","name":"showId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"withdrawRefund"}],"devdoc":{"kind":"dev","methods":{"addTokenIdToWallet(bytes32,address,uint256)":{"params":{"showId":"The unique identifier of the show.","tokenId":"The unique identifier of the ticket being added to the wallet.","wallet":"The wallet address to which the ticket ID will be added."}},"cancelShow(bytes32)":{"params":{"showId":"The unique identifier of the show to be cancelled."}},"completeShow(bytes32)":{"params":{"showId":"The unique identifier of the show to be marked as completed."}},"consumeTicketTier(bytes32,uint256,uint256)":{"details":"This function should only be callable by authorized contracts, such as the Ticket contract.","params":{"amount":"The number of tickets to consume from the specified tier.","showId":"The unique identifier of the show.","tierIndex":"The index of the ticket tier from which tickets are to be consumed."}},"depositToVault(bytes32)":{"params":{"showId":"The unique identifier of the show for which the funds are being deposited."}},"depositToVaultERC20(bytes32,uint256,address,address)":{"details":"Requires approval for the contract to transfer tokens on behalf of the sender.","params":{"amount":"Amount of ERC20 tokens to deposit.","paymentToken":"Address of the ERC20 token to deposit.","showId":"Unique identifier for the show.","ticketRecipient":"Address of the ticket recipient."}},"getNumberOfVoters(bytes32)":{"params":{"showId":"The unique identifier of the show."},"returns":{"_0":"The total number of voters associated with the show."}},"getOrganizer(bytes32)":{"params":{"showId":"The unique identifier of the show."},"returns":{"_0":"The address of the show's organizer."}},"getPendingPayout(bytes32,address)":{"params":{"showId":"The unique identifier of the show.","user":"The address of the user."},"returns":{"amountOwed":"The total refund amount owed to the specified user."}},"getPendingRefund(bytes32,address)":{"params":{"showId":"The unique identifier of the show.","user":"The address of the user."},"returns":{"amountOwed":"The total refund amount owed to the specified user."}},"getSellOutThreshold(bytes32)":{"params":{"showId":"The unique identifier of the show."},"returns":{"_0":"The sell-out threshold percentage for the show."}},"getShowById(bytes32)":{"params":{"showId":"The unique identifier of the show."},"returns":{"artists":"An array of addresses representing the artists involved in the show.","currencyAddress":"The address of the currency the show is Priced in","description":"A description of the show.","isActive":"A boolean indicating whether the show is active.","name":"The name of the show.","organizer":"The address of the show's organizer.","sellOutThreshold":"The sell-out threshold for the show, expressed as a percentage.","status":"The current status of the show.","ticketTiers":"An array of ticket tiers, including pricing and availability for each tier.","totalCapacity":"The total capacity of tickets for the show.","venue":"Detailed venue information for the show."}},"getShowStatus(bytes32)":{"params":{"showId":"The unique identifier of the show."},"returns":{"_0":"The current status of the show."}},"getTicketPricePaid(bytes32,uint256)":{"params":{"showId":"The unique identifier of the show.","ticketId":"The unique identifier of the ticket."},"returns":{"_0":"The price paid for the ticket."}},"getTicketTierInfo(bytes32,uint256)":{"params":{"showId":"The unique identifier of the show.","tierIndex":"The index of the ticket tier within the show."},"returns":{"name":"The name of the ticket tier.","price":"The price of tickets within this tier.","ticketsAvailable":"The number of tickets available for sale in this tier."}},"getTotalCapacity(bytes32)":{"params":{"showId":"The unique identifier of the show."},"returns":{"_0":"The total capacity of tickets available for the show."}},"getTotalTicketsSold(bytes32)":{"params":{"showId":"The unique identifier of the show."},"returns":{"_0":"The total number of tickets sold."}},"getWalletTokenIds(bytes32,address)":{"params":{"showId":"The unique identifier of the show.","wallet":"The address of the wallet."},"returns":{"_0":"An array of token IDs associated with the show for the specified wallet."}},"hasTicket(address,bytes32)":{"params":{"showId":"The unique identifier of the show.","wallet":"The address of the wallet to check."},"returns":{"ownsTicket":"A boolean indicating whether the wallet owns at least one ticket for the show."}},"isArtist(address,bytes32)":{"params":{"showId":"The unique identifier of the show.","user":"The address of the user to check."},"returns":{"_0":"A boolean indicating whether the user is an artist in the show."}},"isOrganizer(address,bytes32)":{"params":{"showId":"The unique identifier of the show.","user":"The address of the user to check."},"returns":{"_0":"A boolean indicating whether the user is the organizer of the show."}},"isTicketOwner(address,bytes32,uint256)":{"params":{"owner":"The address of the potential ticket owner.","showId":"The unique identifier of the show.","ticketId":"The unique identifier of the ticket."},"returns":{"_0":"A boolean indicating whether the owner has the ticket for the show."}},"payout(bytes32)":{"params":{"showId":"The unique identifier of the show for which the payout is being requested."}},"proposeShow((string,string,address[],(int256,int256),uint256,uint8,uint256,(string,uint256,uint256)[],uint256[],address))":{"details":"This function initiates the creation of a show by validating the input parameters encapsulated in the proposal, then creates a new show based on these parameters. It is the entry point for organizers to propose new shows to the platform. The function requires that the caller is a registered organizer and that the artists included in the proposal are registered artists.","params":{"proposal":"A `ShowProposal` struct containing all the necessary details for proposing a new show, including name, description, artist addresses, venue coordinates, radius, sell-out threshold, total capacity, ticket tiers, revenue split configuration, and the currency address for ticket sales."},"returns":{"showId":"The unique identifier for the newly proposed show, generated based on the proposal details."}},"refundTicket(bytes32,uint256)":{"params":{"showId":"The unique identifier of the show for which the refund is requested.","ticketId":"The unique identifier of the ticket being refunded."}},"setProtocolAddresses(address,address,address,address,address,address)":{"params":{"_artistRegistry":"The address of the ArtistRegistry contract.","_organizerRegistry":"The address of the OrganizerRegistry contract.","_referralContract":"The address of the ReferralModule contract.","_ticketContract":"The address of the Ticket contract.","_venueContract":"The address of the Venue contract.","_venueRegistry":"The address of the VenueRegistry contract."}},"setTicketOwnership(bytes32,address,uint256,bool)":{"details":"This function should only be callable by the Ticket contract or other authorized contracts.","params":{"isOwned":"A boolean indicating the ownership status to be set.","owner":"The address of the ticket owner.","showId":"The unique identifier of the show.","ticketId":"The unique identifier of the ticket."}},"setTicketPricePaid(bytes32,uint256,uint256)":{"params":{"price":"The price paid for the ticket.","showId":"The unique identifier of the show.","ticketId":"The unique identifier of the ticket."}},"setTotalTicketsSold(bytes32,uint256)":{"params":{"amount":"The amount to be added to the total tickets sold count.","showId":"The unique identifier of the show."}},"updateShowVenue(bytes32,(string,(int256,int256),uint256,address,bytes32))":{"params":{"newVenue":"The new venue details to be applied to the show.","showId":"The unique identifier of the show."}},"updateStatus(bytes32,uint8)":{"params":{"showId":"The unique identifier of the show.","status":"The new status to be assigned to the show."}},"updateStatusIfSoldOut(bytes32)":{"params":{"showId":"The unique identifier of the show to be evaluated."}},"withdrawRefund(bytes32)":{"params":{"showId":"The unique identifier of the show for which the refund is being withdrawn."}}},"version":1},"userdoc":{"kind":"user","methods":{"addTokenIdToWallet(bytes32,address,uint256)":{"notice":"Adds a token ID to a user's wallet for a specific show, signifying ticket ownership."},"cancelShow(bytes32)":{"notice":"Cancels a show based on its unique identifier."},"completeShow(bytes32)":{"notice":"Marks a show as completed, which may trigger fund distributions and other end-of-show processes."},"consumeTicketTier(bytes32,uint256,uint256)":{"notice":"Consumes a specified number of tickets from a ticket tier for a given show."},"depositToVault(bytes32)":{"notice":"Allows the deposit of funds into a show's vault, contributing towards the show's financial pool."},"depositToVaultERC20(bytes32,uint256,address,address)":{"notice":"Deposits specified ERC20 tokens into the vault for a specific show."},"getNumberOfVoters(bytes32)":{"notice":"Retrieves the number of voters for a specific show, including both artists and the organizer."},"getOrganizer(bytes32)":{"notice":"Retrieves the organizer's address for a given show."},"getPendingPayout(bytes32,address)":{"notice":"Retrieves the pending refund amount owed to a specific user for a given show."},"getPendingRefund(bytes32,address)":{"notice":"Retrieves the pending refund amount owed to a specific user for a given show."},"getSellOutThreshold(bytes32)":{"notice":"Retrieves the sell-out threshold for a specific show, expressed as a percentage."},"getShowById(bytes32)":{"notice":"Retrieves detailed information about a show by its unique identifier."},"getShowStatus(bytes32)":{"notice":"Retrieves the current status of a show based on its unique identifier."},"getTicketPricePaid(bytes32,uint256)":{"notice":"Retrieves the price paid for a specific ticket of a show."},"getTicketTierInfo(bytes32,uint256)":{"notice":"Retrieves information about a specific ticket tier within a show."},"getTotalCapacity(bytes32)":{"notice":"Retrieves the total capacity for a specific show."},"getTotalTicketsSold(bytes32)":{"notice":"Retrieves the total number of tickets sold for a specific show."},"getWalletTokenIds(bytes32,address)":{"notice":"Retrieves the token IDs associated with a specific show for a given wallet."},"hasTicket(address,bytes32)":{"notice":"Checks if a wallet owns at least one ticket for a specific show."},"isArtist(address,bytes32)":{"notice":"Checks if the specified user is an artist in the given show."},"isOrganizer(address,bytes32)":{"notice":"Checks if the specified user is the organizer of the given show."},"isTicketOwner(address,bytes32,uint256)":{"notice":"Checks if the specified owner owns a ticket for the given show."},"payout(bytes32)":{"notice":"Initiates a payout of funds from a show's vault to the specified showId."},"proposeShow((string,string,address[],(int256,int256),uint256,uint8,uint256,(string,uint256,uint256)[],uint256[],address))":{"notice":"Proposes a new show with detailed configuration encapsulated within a `ShowProposal` struct."},"refundTicket(bytes32,uint256)":{"notice":"Allows a ticket owner to request a refund for a specific ticket of a show, under certain conditions."},"setProtocolAddresses(address,address,address,address,address,address)":{"notice":"Sets the protocol addresses for Ticket, Venue, Referral, Artist Registry, Organizer Registry, and Venue Registry contracts."},"setTicketOwnership(bytes32,address,uint256,bool)":{"notice":"Sets the ownership status of a ticket for a specific show."},"setTicketPricePaid(bytes32,uint256,uint256)":{"notice":"Sets the price paid for a specific ticket of a show."},"setTotalTicketsSold(bytes32,uint256)":{"notice":"Sets the total number of tickets sold for a specific show."},"updateShowVenue(bytes32,(string,(int256,int256),uint256,address,bytes32))":{"notice":"Updates the venue details for a specific show."},"updateStatus(bytes32,uint8)":{"notice":"Updates the status of a show, potentially triggered by ticket sales reaching the sell-out threshold or other criteria."},"updateStatusIfSoldOut(bytes32)":{"notice":"Checks and updates the status of a show to 'SoldOut' if ticket sales meet or exceed the sell-out threshold."},"withdrawRefund(bytes32)":{"notice":"Allows a user to withdraw their refund for a previously refunded ticket."}},"version":1}},"settings":{"remappings":["@openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/","openzeppelin/=lib/openzeppelin-contracts/contracts/","solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/show/IShow.sol":"IShow"},"evmVersion":"paris","libraries":{}},"sources":{"src/show/IShow.sol":{"keccak256":"0xf37d63c0a6b1a89840e4af79ab98cda8186388fd0be669dc7ce0c163c1ae4e7d","urls":["bzz-raw://ce1c24c85ed2a0d2503f857b1646e6a5d579e4fdc927d73d93a15bfa652be3cf","dweb:/ipfs/QmVU5o5B7w9ggLRrMTdziEg1KcVgjvuJ9LBntJj3711f3Y"],"license":"MIT"},"src/show/types/ShowTypes.sol":{"keccak256":"0x4700af48e513d5cc011b642a42fc5289856d876c1ec0d8c1c135717d7f73507f","urls":["bzz-raw://02487cfa6e12b19feaaa5a549ede9f689647190f82f95af041246012503a6c34","dweb:/ipfs/QmNnQXHvSjXDMDBvtkthwrzYrf2iDT2AAgGVdQqxV9oC4s"],"license":"MIT"},"src/venue/storage/VenueStorage.sol":{"keccak256":"0xfaf584b6c6b9b15c4b8e6238e14621a61e8b2f7cef6bc222798f84d77517fdfd","urls":["bzz-raw://6c84581ae057deddcd8954f1538c8d79a13f70ac61c24e47dea55019bea8dedc","dweb:/ipfs/QmS1646muq7h6BecKPEpCamMqu55VA5SqJsZWt4phnnFZA"],"license":"MIT"},"src/venue/types/VenueTypes.sol":{"keccak256":"0x1a380557ee50da7ae8198bddd3ba38a2d97087a62431ca0666a10a7775b039cc","urls":["bzz-raw://3b4016b4232862737e1919e215585af1fd52dc414c9775ca5c3f372b2a8ac080","dweb:/ipfs/Qmb9zzyB727RvRhK2eynCJqCjEoWTdJyKBsFnQ8ay9SKVR"],"license":"MIT"}},"version":1},"id":59}